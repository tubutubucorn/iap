server {
    listen       8881;
    server_name  localhost;
    location / {
        # 認証しているかどうか確認
        auth_request /auth/is_login;
        # 認証確認失敗時
        error_page 401 = /auth/login;
        # 認可失敗時
        error_page 403 = /403;
        
        proxy_set_header Host $host;
        proxy_set_header X-Real-IP $remote_addr;
        proxy_set_header X-Forwarded-Host $host:$server_port;
        proxy_set_header X-Forwarded-Server $host;
        proxy_set_header X-Forwarded-Proto $scheme;
        proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
        proxy_pass http://badstore;
        proxy_redirect default;
    } 
    location /auth/login {
        # サブリクエストが2xx応答コードを返す場合、アクセス許可
        # 401または403を返す場合、アクセス拒否
        proxy_pass http://auth:5000;
        proxy_set_header Host $http_host;
        proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
        proxy_set_header Request-Uri $request_uri;
        proxy_set_header Request-Host badstore;
        proxy_redirect off;
    }
    location /auth/is_login {
        # サブリクエストが2xx応答コードを返す場合、アクセス許可
        # 401または403を返す場合、アクセス拒否
        proxy_pass http://auth:5000;
        proxy_set_header Host $http_host;
        proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
        proxy_set_header Request-Method $request_method;
        proxy_set_header Request-Uri $request_uri;
        proxy_set_header Request-Host badstore;

        proxy_set_header Request $request;
        proxy_set_header Request-Body-File $request_body_file;
        proxy_set_header Request-Body $request_body;

        proxy_redirect off;
        proxy_pass_request_body off;
        proxy_set_header Content-Length "";
    }
    location = /403 {
        proxy_pass http://auth:5000;
        proxy_set_header Host $http_host;
        proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
        proxy_redirect off;
    }
    error_page 500 502 503 504 /50x.html;
    location = /50x.html {
        root /usr/local/openresty/nginx/html;
    }
    #ssl_certificate     /etc/nginx/ssl/cacert.pem;
    #ssl_certificate_key /etc/nginx/ssl/cakey.pem;
    #ssl_password_file   /etc/nginx/ssl/ssl_pass_file.txt;
    #add_header Strict-Transport-Security 'max-age=31536000';
}